j -= 1
p = int(line[j+1:ind])
start = None
sent = '<'
# gotta handle a bunch of different cases to parse the username
if 'height="20' in line:
start = line.index('height="20')+20
elif "leaderboard-anon" in line:
start = line.index('#')
sent = ')'
else:
start = line.index('userphoto')+18
j = start
while line[j] != sent:
j += 1
u = line[start:j]
if len(u.strip()) == 0:
print(line)
points[u] = points.get(u, 0) + (101 - p)
# Want the entire leaderboard? Just uncomment this
#items = sorted(((points[u], u) for u in points), reverse=True)
#prev = None
#i = 0
#for p,u in items:
#    pass
#    if p != prev:
#        i += 1
#        print("POSITION %i" % i)
#        prev = p
#    print("%s has %i points." % (u, p))
uniqueScores = set(points.values())
print("There are %i users with at least one global point." % len(points))
print("There are %i unique scores on the leaderboard." % len(uniqueScores))
if user not in points:
print("User %s doesn't have any global points, so they are not on the leaderboard at all." % user)
else:
greater = sum(points[u] > points[user] for u in points)
pos = sum(v > points[user] for v in set(points.values())) + 1
print("User %s is in position %i, accounting for ties." % (user, pos))
print("There are exactly %i users with a higher score than %s." % (greater, user))
remotes::install_github("saezlab/OmnipathR")
install.packages("installr")
installr::updateR()
setwd("C:/Users/lesch/Dropbox/School 2021-2022 (SLU)/Fall 2021/AdventOfCode/AdventOfCode2021/Day13")
setwd("C:/Users/lesch/Dropbox/School 2021-2022 (SLU)/Fall 2021/AdventOfCode/AdventOfCode2021/Day12")
library(igraph)
library(tidyverse)
input <- read.csv("Day12Input.txt", header = FALSE, colClasses = c("character"))
input_df <- as.data.frame(t(apply(input, MARGIN = 1, function(x) {
(strsplit(x, split = "-")[[1]])
})))
input_vector <- as.vector(t(input_df))
nodes <- unique(input_vector)
# add nodes A1, A2, A3, ... that connect to the same nodes as A
# then do all_simple_paths
g <- graph(input_vector, directed = FALSE)
plot(g)
all_simple_paths(g)
library(igraph)
library(tidyverse)
input <- read.csv("Day12Input.txt", header = FALSE, colClasses = c("character"))
input_df <- as.data.frame(t(apply(input, MARGIN = 1, function(x) {
(strsplit(x, split = "-")[[1]])
})))
input_vector <- as.vector(t(input_df))
# add nodes A1, A2, A3, ... that connect to the same nodes as A
# then do all_simple_paths
g <- graph(input_vector, directed = FALSE)
plot(g)
all_simple_paths(g, from = "start", to = "end")
setwd("C:/Users/lesch/Dropbox/School 2021-2022 (SLU)/Fall 2021/AdventOfCode/AdventOfCode2021/Day13")
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
print(line)
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line)
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line[1])
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line[1])
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line[2])
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line[1])
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line[1][1])
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
print(line)
}
}
close(conn)
test <- "fold along y=7"
test[1]
substr(test, 1, 1)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
print(strsplit(line, split = ","))
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
print(strsplit(line, split = ",")[[1]])
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
print(as.numeric(strsplit(line, split = ",")[[1]]))
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
split <- as.numeric(strsplit(line, split = ",")[[1]])
point <- c(split[1], split[2])
print(point)
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point[1])
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point[2])
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
print(line)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
print(strsplit(line, split = "=")[[1]])
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
fold <- c(split[1], as.numeric(split[2]))
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
fold <- c(split[1], as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(split[1])
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], 1, 1))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], -1, -1))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], length(split[1]), length(split[1])))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], length(split[1]) - 1, length(split[1]) - 1))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], 2, 2)
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(substr(split[1], 2, 2))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(split[1][length(split[1])])
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
print(length(split[1]))
fold <- c(substr(split[1], length(split[1]), length(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
fold <- c(substr(split[1], nchar(split[1]), nchar(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)
conn <- file("Day13Input.txt", open = "r")
lines <-readLines(conn)
for (line in lines) {
if (line != "") {
if (substr(line, 1, 1) != "f") {
point <- as.numeric(strsplit(line, split = ",")[[1]])
print(point)
}
else {
split <- strsplit(line, split = "=")[[1]]
fold <- c(substr(split[1], nchar(split[1]), nchar(split[1])),
as.numeric(split[2]))
print(fold)
}
}
}
close(conn)

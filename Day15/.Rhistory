}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
full_map
shortest_paths(g, from = 1, to = n_cells)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
g
g+attr
igraph::as_adjacency_matrix(g)
test <- as_adj(g)
View(test)
igraph::shortest_paths(g, from = 1, to = n_cells, weights = NULL)
igraph::shortest_paths(g, from = 1, to = n_cells, weights = NULL)$vpath[[1]]
delete_edge_attr(g, "weight")
shortest_paths(g, from = 1, to = n_cells, delete_edge_attr(g, "weight"))
shortest_paths(delete_edge_attr(g, "weight"), from = 1, to = n_cells)
shortest_paths(delete_edge_attr(g, "weight"), from = 1, to = n_cells)
shortest_paths(delete_edge_attr(g, "weight"), from = 1, to = n_cells)$vpath[[1]]
path
shortest_paths(delete_edge_attr(g, "weight"), from = 1, to = n_cells)$vpath[[1]]
path <- shortest_paths(delete_edge_attr(g, "weight"), from = 1, to = n_cells)$vpath[[1]]
path
path[999]
path[900:999]
input_v[path]
sum(input_v[path])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells - 1)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
path <- as.vector(shortest_paths(g, from = 1, to = 249999)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
path <- as.vector(shortest_paths(g, from = 1, to = 249500)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = 249999)$vpath[[1]])
path <- as.vector(shortest_paths(g, from = 1, to = 249500)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1]) # 2926 too high
input_v[25000]
input_v[250000]
View(full_map)
n_row
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj
View(adj)
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
View(adj)
View(input)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
path
for (i in 1:(length(path) - 1)) {
filter(adj, from = path[i], to = path[i + 1])$weight
}
for (i in 1:(length(path) - 1)) {
print(filter(adj, from == path[i], to == path[i + 1])$weight)
}
total <- 0
for (i in 1:(length(path) - 1)) {
total <- total + filter(adj, from == path[i], to == path[i + 1])$weight
}
total
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
# 2926 too high
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj
View(adj)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
r
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
filter(adj, to < from)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
# 2926 too high
# 2926 too high
input_v[path] - input[1]
# 2926 too high
sum(input_v[path]) - input[1]
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input[1])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) %>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells)) #%>% filter(from < to)
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adjacent(r, cells = 1:n_cells)
filter(adjacent(r, cells = 1:n_cells), from > to)
filter(as.data.frame(adjacent(r, cells = 1:n_cells)), from > to)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input[1])
g
path
length(path)
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input_v[1])
library(raster)
library(tidyverse)
library(igraph)
input <- read.csv("Day15Input.txt", header = FALSE, colClasses = c("character"))
input <- t(apply(input, MARGIN = 1, function(x) {
as.numeric(strsplit(x, split = "")[[1]])
}))
full_map <- matrix(nrow = nrow(input) * 5, ncol = ncol(input) * 5)
for (i in 1:5) {
for (j in 1:5) {
full_map[((i - 1) * nrow(input) + 1):(i * nrow(input)),
((j - 1) * nrow(input) + 1):(j * nrow(input))] <- input + (i - 1) + (j - 1)
}
}
full_map[full_map > 9] <- full_map[full_map > 9] %% 9
input <- full_map
input_v <- as.vector(t(input))
n_cells <- length(input_v)
r <- raster(input)
adj <- as.data.frame(adjacent(r, cells = 1:n_cells))
adj <- adj %>% arrange(from) %>% mutate(weight = input_v[to])
g <- graph.data.frame(adj)
path <- as.vector(shortest_paths(g, from = 1, to = n_cells)$vpath[[1]])
print(sum(input_v[path]) - input[1])

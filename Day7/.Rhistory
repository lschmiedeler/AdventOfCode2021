fredr_set_key("9280606dbfb074b8932d6562231ca6df")
install.packages("fredr")
library(fredr)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01")
)
fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01"),
frequency = "q"
)
fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01")
)
fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01")
)$date
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01")
)
View(unrate)
library(tidyverse)
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2000-01-01")
) %>% select(date, value)
library(lubridate)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
summary(unrate)
ggplot(unrate, aes(x = date, y = value)) +
geom_point()
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
summary(unrate)
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2020-01-01")
) %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1960-01-01"),
observation_end = as.Date("2020-01-01")
) %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1950-01-01"),
observation_end = as.Date("2020-01-01")
) %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(
series_id = "UNRATE",
observation_start = as.Date("1900-01-01"),
observation_end = as.Date("2020-01-01")
) %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
summary(unrate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(
series_id = "UNRATE"
#observation_start = as.Date("1900-01-01"),
#observation_end = as.Date("2020-01-01")
) %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE") %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line()
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_classic()
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE", units = "chg") %>% select(date, value)
unrate$date <- parse_date_time(unrate$date, "%Y-%m-%d")
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
View(unrate)
min_wage <- fredr(series_id = "STTMINWGFG", units = "chg") %>% select(date, value)
summary(min_wage)
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE", units = "chg") %>% select(date, value)
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
min_wage <- fredr(series_id = "STTMINWGFG", units = "chg") %>% select(date, value)
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE", units = "chg") %>% select(date, value)
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
min_wage <- fredr(series_id = "STTMINWGFG", units = "chg") %>% select(date, value)
ggplot(min_wage, aes(x = date, y = value)) +
geom_line() +
theme_bw()
View(min_wage)
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE", units = "chg") %>% select(date, value)
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
min_wage <- fredr(series_id = "STTMINWGFG") %>% select(date, value)
ggplot(min_wage, aes(x = date, y = value)) +
geom_line() +
theme_bw()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE") %>% select(date, value)
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
min_wage <- fredr(series_id = "STTMINWGFG") %>% select(date, value)
ggplot(min_wage, aes(x = date, y = value)) +
geom_line() +
theme_bw()
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
fredr_category_children(1)
fredr_category_children(0)
fredr_category_children(1)
fredr_category_children(2)
fredr_category_children(3)
fredr_category_children(4)
fredr_category_children(5)
fredr_category_children(6)
fredr_category_children(7)
fredr_category_children(33961)
fredr_category_children(10)
fredr_category_children(11)
fredr_category_children(1)
fredr_category_children(0)
library(fredr)
library(tidyverse)
library(lubridate)
fredr_set_key("9280606dbfb074b8932d6562231ca6df")
unrate <- fredr(series_id = "UNRATE") %>% select(date, value)
ggplot(unrate, aes(x = date, y = value)) +
geom_line() +
theme_bw()
setwd("C:/Users/lesch/Dropbox/School 2021-2022 (SLU)/Fall 2021/AdventOfCode/Day7")
positions <- read.csv("Day7Input.csv", header = FALSE)
positions <- read.csv("Day7Input.txt", header = FALSE)
View(positions)
positions <- read.csv("Day7Input.txt", header = FALSE)[1,]
View(positions)
positions <- read.csv("Day7Input.txt", header = FALSE)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[,1])
positions
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
positions
min(positions):max(positions)
sort(unique(positions))
positions - sort(unique(positions))
abs(positions - sort(unique(positions)))
abs(positions - 2)
sum(abs(positions - 2))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
for (position in positions) {
print(sum(abs(positions - position)))
}
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- 100000
position <- 0
for (position in positions) {
new_total_fuel <- sum(abs(positions - position))
if (new_total_fuel < total_fuel) {
total_fuel <- new_total_fuel
position <- position
}
}
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- 100000
position <- 0
for (position in positions) {
new_total_fuel <- sum(abs(positions - position))
if (new_total_fuel < total_fuel) {
total_fuel <- new_total_fuel
position <- position
}
}
print(total_fuel, position)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- 100000
position <- 0
for (position in positions) {
new_total_fuel <- sum(abs(positions - position))
if (new_total_fuel < total_fuel) {
total_fuel <- new_total_fuel
position <- position
}
}
print(c(total_fuel, position))
total_fuel <- Inf
total_fuel
3 < total_fuel
10000< total_fuel
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique(positions)
sort(unique(positions), decreasing = FALSE)
sort(unique(positions), decreasing = TRUE)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- Inf
best_position <- 0
for (position in unique_positions) {
new_total_fuel <- sum(abs(positions - position))
if (new_total_fuel < total_fuel) {
total_fuel <- new_total_fuel
best_position <- position
}
}
print(c(total_fuel, best_position))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- Inf
best_position <- 0
for (position in unique_positions) {
new_total_fuel <- sum(abs(positions - position))
if (new_total_fuel < total_fuel) {
total_fuel <- new_total_fuel
best_position <- position
}
}
print(c(total_fuel, best_position))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
View(unique_positions)
View(positions)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- sum(abs(positions - x))
return(total_fuel)
})
print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- sum(abs(positions - x))
return(total_fuel)
})
print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- sum(abs(positions - x))
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- sum(abs(positions - x))
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
unique_positions
positions - 16
abs(positions - 16)
(positions - 16)
positions
positions - 16
(positions - 16)*(positions - 16 - 1)/2
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- sum(abs(positions - x))
total_fuel <- total_fuel * (total_fuel + 1) / 2
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
positions - 5
(positions - 5) * (positions - 1) / 2
(positions - 5) * (positions - 5 - 1) / 2
(positions - 5) * (positions - 5 + 1) / 2
sum((positions - 5) * (positions - 5 + 1) / 2)
sort((positions - 5) * (positions - 5 + 1) / 2)
positions - 5
abs(positions - 5)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x))
total_fuel <- total_fuel * (total_fuel + 1) / 2
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
return(total_fuel)
})
print(min(total_fuel))
total_fuel <- abs(positions - 5)
total_fuel * (total_fuel + 1) / 2
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x)
total_fuel <- sum(total_fuel * (total_fuel + 1) / 2)
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
print(total_fuel)
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
return(total_fuel)
})
print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(unique_positions, function(x) {
print(x)
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
print(total_fuel)
return(total_fuel)
})
#print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
#unique_positions <- sort(unique(positions), decreasing = TRUE)
total_fuel <- sapply(min(positions):max(positions), function(x) {
print(x)
total_fuel <- abs(positions - x)
total_fuel <- total_fuel * (total_fuel + 1) / 2
print(total_fuel)
return(total_fuel)
})
#print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- sapply(min(positions):max(positions), function(x) {
total_fuel <- abs(positions - x)
total_fuel <- sum(total_fuel * (total_fuel + 1) / 2)
return(total_fuel)
})
print(total_fuel)
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- sapply(min(positions):max(positions), function(x) {
total_fuel <- abs(positions - x)
total_fuel <- sum(total_fuel * (total_fuel + 1) / 2)
return(total_fuel)
})
print(min(total_fuel))
positions <- as.vector(read.csv("Day7Input.txt", header = FALSE)[1,])
total_fuel <- sapply(min(positions):max(positions), function(x) {
total_fuel <- abs(positions - x)
total_fuel <- sum(total_fuel * (total_fuel + 1) / 2)
return(total_fuel)
})
print(min(total_fuel))
